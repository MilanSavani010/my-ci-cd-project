name: CI Pipeline - Node.js with Docker

on:
    push:
        branches: []
    pull_request:
        branches: ["main"]

jobs:
    secret-scanning: 
        runs-on: ubuntu-latest
    
        steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Install Gitleaks
          run: |
            curl -sSfL https://github.com/gitleaks/gitleaks/releases/download/v8.18.4/gitleaks_8.18.4_linux_x64.tar.gz | tar -xz
            mv gitleaks /usr/local/bin/
        
        - name: Run Gitleaks Scan
          run: |
            gitleaks detect --source . --config .gitleaks.toml --report-format json --report-path secret-report.json || true
            echo "ARTIFACT_PATH=secret-report.json" >> $GITHUB_ENV
          
        - name: Upload Gitleaks Report as tar.gz
          uses: actions/upload-artifact@v4
          with:
            name: gitleaks-report
            path: ${{ env.ARTIFACT_PATH }}

        - name: Check for Secrets
          run: |
           if [ -s secret-report.json ] && [ "$(jq '. | length' secret-report.json)" -gt 0 ]; then
              echo "Secrets found in code. Aborting pipeline."
              cat secret-report.json
              exit 1
           fi
    
    APP:
      needs: secret-scanning
      runs-on: ubuntu-latest
      
      steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint
      
      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: SAST with Semgrep
        run: |
          pip install Semgrep
          semgrep --config=auto --json > sast-report.json
          echo "ARTIFACT_PATH=sast-report.json" >> $GITHUB_ENV
      
      - name: Upload Sast Report as tar.gz
        uses: actions/upload-artifact@v4
        with:
            name: sast-report
            path: ${{ env.ARTIFACT_PATH }}
  

    